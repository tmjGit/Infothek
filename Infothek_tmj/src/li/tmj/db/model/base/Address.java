package li.tmj.db.model.base;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity
public class Address extends Data {
	private String house;
	private String town;
	private String postcode;
	private String state;
	private String street_box;
	private String appartement;

//	protected int id=0; // id generated by the external DB and then always >0
	
	@Id @GeneratedValue(strategy=GenerationType.AUTO) @Override
	public int getId() {
		return id;
	}
//	@Override
//	public void setId(int id) {
//		this.id = id;
//	}

	public Address() {
		
	}
	
	public Address(int id) {
		setId(id);
	}

	public String getHouse() {
		return house;
	}
	public void setHouse(String house) {
		this.house = house;
	}
	public String getTown() {
		return town;
	}
	public void setTown(String town) {
		this.town = town;
	}
	public String getPostcode() {
		return postcode;
	}
	public void setPostcode(String postcode) {
		this.postcode = postcode;
	}
	public String getState() {
		return state;
	}
	public void setState(String state) {
		this.state = state;
	}
	public String getStreet_box() {
		return street_box;
	}
	public void setStreet_box(String street_box) {
		this.street_box = street_box;
	}
	public String getAppartement() {
		return appartement;
	}
	public void setAppartement(String appartement) {
		this.appartement = appartement;
	}

	@Override
	public String toString() {
		return "Address [id=" + id + ", changed=" + changed + ", created=" + created + ", house=" + house + ", town="
				+ town + ", postcode=" + postcode + ", state=" + state + ", street_box=" + street_box + ", appartement="
				+ appartement + "]";
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((appartement == null) ? 0 : appartement.hashCode());
		result = prime * result + ((changed == null) ? 0 : changed.hashCode());
		result = prime * result + ((created == null) ? 0 : created.hashCode());
		result = prime * result + ((house == null) ? 0 : house.hashCode());
		result = prime * result + id;
		result = prime * result + ((postcode == null) ? 0 : postcode.hashCode());
		result = prime * result + ((state == null) ? 0 : state.hashCode());
		result = prime * result + ((street_box == null) ? 0 : street_box.hashCode());
		result = prime * result + ((town == null) ? 0 : town.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Address other = (Address) obj;
		if (appartement == null) {
			if (other.appartement != null)
				return false;
		} else if (!appartement.equals(other.appartement))
			return false;
		if (changed == null) {
			if (other.changed != null)
				return false;
		} else if (!changed.equals(other.changed))
			return false;
		if (created == null) {
			if (other.created != null)
				return false;
		} else if (!created.equals(other.created))
			return false;
		if (house == null) {
			if (other.house != null)
				return false;
		} else if (!house.equals(other.house))
			return false;
		if (id != other.id)
			return false;
		if (postcode == null) {
			if (other.postcode != null)
				return false;
		} else if (!postcode.equals(other.postcode))
			return false;
		if (state == null) {
			if (other.state != null)
				return false;
		} else if (!state.equals(other.state))
			return false;
		if (street_box == null) {
			if (other.street_box != null)
				return false;
		} else if (!street_box.equals(other.street_box))
			return false;
		if (town == null) {
			if (other.town != null)
				return false;
		} else if (!town.equals(other.town))
			return false;
		return true;
	}
}
